DROP TABLE users;
DROP TABLE books;

CREATE TABLE users (
    users_id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    users_uid TINYTEXT NOT NULL,
    users_pwd LONGTEXT NOT NULL,
    users_email TINYTEXT NOT NULL
);

CREATE TABLE books (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255) NOT NULL,
    genre VARCHAR(255), -- Added genre column
    cover_image VARCHAR(255), -- store image URLs or relative paths
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO books (title, author, genre, cover_image) VALUES
('The Midnight Library', 'Matt Haig', 'Contemporary Fiction, Magical Realism', 'covers/midnight-library.jpg'),
('1984', 'George Orwell', 'Dystopian, Political Fiction, Science Fiction', 'covers/1984.jpg'),
('The Name of the Wind', 'Patrick Rothfuss', 'Epic Fantasy, Adventure', 'covers/name-of-the-wind.jpg');

INSERT INTO books (title, author, genre, cover_image) VALUES
('Book Title 1', 'Author Horror', 'Horror', 'covers/1984.jpg'),
('Book Title 2', 'Author Horror', 'Horror, Thriller', 'covers/1984.jpg'),
('Book Title 3', 'Author Horror', 'Supernatural Horror', 'covers/1984.jpg'),
('Book Title 4', 'Author Horror', 'Horror', 'covers/1984.jpg'),
('Book Title 5', 'Author Horror', 'Psychological Horror', 'covers/1984.jpg'),
('Book Title 6', 'Author Comedy', 'Comedy, Satire', 'covers/1984.jpg'),
('Book Title 7', 'Author Comedy', 'Comedy', 'covers/1984.jpg'),
('Book Title 8', 'Author Comedy', 'Dark Comedy', 'covers/1984.jpg'),
('Book Title 9', 'Author Comedy', 'Comedy', 'covers/1984.jpg'),
('Book Title 10', 'Author Comedy', 'Romantic Comedy', 'covers/1984.jpg'),
('Book Title 11', 'Author SciFi', 'Science Fiction, Space Opera', 'covers/1984.jpg'),
('Book Title 12', 'Author SciFi', 'Science Fiction', 'covers/1984.jpg'),
('Book Title 13', 'Author SciFi', 'Cyberpunk, Science Fiction', 'covers/1984.jpg'),
('Book Title 14', 'Author SciFi', 'Science Fiction', 'covers/1984.jpg'),
('Book Title 15', 'Author SciFi', 'Hard Science Fiction', 'covers/1984.jpg'),
('Book Title 16', 'Author Thriller', 'Thriller, Mystery', 'covers/1984.jpg'),
('Book Title 17', 'Author Thriller', 'Thriller', 'covers/1984.jpg'),
('Book Title 18', 'Author Thriller', 'Psychological Thriller', 'covers/1984.jpg'),
('Book Title 19', 'Author Thriller', 'Thriller', 'covers/1984.jpg'),
('Book Title 20', 'Author Thriller', 'Crime Thriller', 'covers/1984.jpg');

ALTER TABLE users ADD is_admin BOOLEAN DEFAULT FALSE;
INSERT INTO users (users_uid, users_email, is_admin, users_pwd) VALUES ('admin', 'admin@admin.com', 1, '$2y$10$INvQoLFmST6ewSBItlkXVOR8Q1sTzGRxkOU7TPiNvLOiLZ01nYhvG');


-- -----------------------------------------------------
-- Table `groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `groups` (
  `group_id` INT NOT NULL AUTO_INCREMENT,
  `group_name` VARCHAR(255) NOT NULL,
  `group_description` TEXT NULL,
  `creator_user_id` INT(11) NOT NULL,
  `secret_code` VARCHAR(64) NOT NULL UNIQUE,
  `requires_approval` BOOLEAN NOT NULL DEFAULT FALSE,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`group_id`),
  INDEX `fk_groups_users_idx` (`creator_user_id` ASC),
  CONSTRAINT `fk_groups_users`
    FOREIGN KEY (`creator_user_id`)
    REFERENCES `users` (`users_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `group_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `group_members` (
  `group_member_id` INT NOT NULL AUTO_INCREMENT,
  `group_id` INT NOT NULL,
  `user_id` INT(11) NOT NULL,
  `join_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `member_status` ENUM('approved', 'pending', 'denied', 'invited') NOT NULL DEFAULT 'pending',
  PRIMARY KEY (`group_member_id`),
  INDEX `fk_group_members_groups_idx` (`group_id` ASC),
  INDEX `fk_group_members_users_idx` (`user_id` ASC),
  UNIQUE INDEX `uq_group_user_idx` (`group_id` ASC, `user_id` ASC), -- User can only be in a group once
  CONSTRAINT `fk_group_members_groups`
    FOREIGN KEY (`group_id`)
    REFERENCES `groups` (`group_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_members_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`users_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;